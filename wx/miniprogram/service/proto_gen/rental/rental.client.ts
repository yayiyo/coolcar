// @generated by protobuf-ts 2.8.2
// @generated from protobuf file "rental.proto" (package "rental.v1", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { TripService } from "./rental";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { CreateTripResponse } from "./rental";
import type { CreateTripRequest } from "./rental";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service rental.v1.TripService
 */
export interface ITripServiceClient {
    /**
     * @generated from protobuf rpc: CreateTrip(rental.v1.CreateTripRequest) returns (rental.v1.CreateTripResponse);
     */
    createTrip(input: CreateTripRequest, options?: RpcOptions): UnaryCall<CreateTripRequest, CreateTripResponse>;
}
/**
 * @generated from protobuf service rental.v1.TripService
 */
export class TripServiceClient implements ITripServiceClient, ServiceInfo {
    typeName = TripService.typeName;
    methods = TripService.methods;
    options = TripService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: CreateTrip(rental.v1.CreateTripRequest) returns (rental.v1.CreateTripResponse);
     */
    createTrip(input: CreateTripRequest, options?: RpcOptions): UnaryCall<CreateTripRequest, CreateTripResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateTripRequest, CreateTripResponse>("unary", this._transport, method, opt, input);
    }
}
