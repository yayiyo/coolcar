// @generated by protobuf-ts 2.8.2
// @generated from protobuf file "car.proto" (package "car.v1", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { CarService } from "./car";
import type { UpdateCarResponse } from "./car";
import type { UpdateCarRequest } from "./car";
import type { UnlockCarResponse } from "./car";
import type { UnlockCarRequest } from "./car";
import type { LockCarResponse } from "./car";
import type { LockCarRequest } from "./car";
import type { GetCarsResponse } from "./car";
import type { GetCarsRequest } from "./car";
import type { Car } from "./car";
import type { GetCarRequest } from "./car";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { CarEntity } from "./car";
import type { CreateCarRequest } from "./car";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service car.v1.CarService
 */
export interface ICarServiceClient {
    /**
     * @generated from protobuf rpc: CreateCar(car.v1.CreateCarRequest) returns (car.v1.CarEntity);
     */
    createCar(input: CreateCarRequest, options?: RpcOptions): UnaryCall<CreateCarRequest, CarEntity>;
    /**
     * @generated from protobuf rpc: GetCar(car.v1.GetCarRequest) returns (car.v1.Car);
     */
    getCar(input: GetCarRequest, options?: RpcOptions): UnaryCall<GetCarRequest, Car>;
    /**
     * @generated from protobuf rpc: GetCars(car.v1.GetCarsRequest) returns (car.v1.GetCarsResponse);
     */
    getCars(input: GetCarsRequest, options?: RpcOptions): UnaryCall<GetCarsRequest, GetCarsResponse>;
    /**
     * @generated from protobuf rpc: LockCar(car.v1.LockCarRequest) returns (car.v1.LockCarResponse);
     */
    lockCar(input: LockCarRequest, options?: RpcOptions): UnaryCall<LockCarRequest, LockCarResponse>;
    /**
     * @generated from protobuf rpc: UnlockCar(car.v1.UnlockCarRequest) returns (car.v1.UnlockCarResponse);
     */
    unlockCar(input: UnlockCarRequest, options?: RpcOptions): UnaryCall<UnlockCarRequest, UnlockCarResponse>;
    /**
     * @generated from protobuf rpc: UpdateCar(car.v1.UpdateCarRequest) returns (car.v1.UpdateCarResponse);
     */
    updateCar(input: UpdateCarRequest, options?: RpcOptions): UnaryCall<UpdateCarRequest, UpdateCarResponse>;
}
/**
 * @generated from protobuf service car.v1.CarService
 */
export class CarServiceClient implements ICarServiceClient, ServiceInfo {
    typeName = CarService.typeName;
    methods = CarService.methods;
    options = CarService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: CreateCar(car.v1.CreateCarRequest) returns (car.v1.CarEntity);
     */
    createCar(input: CreateCarRequest, options?: RpcOptions): UnaryCall<CreateCarRequest, CarEntity> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateCarRequest, CarEntity>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetCar(car.v1.GetCarRequest) returns (car.v1.Car);
     */
    getCar(input: GetCarRequest, options?: RpcOptions): UnaryCall<GetCarRequest, Car> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetCarRequest, Car>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetCars(car.v1.GetCarsRequest) returns (car.v1.GetCarsResponse);
     */
    getCars(input: GetCarsRequest, options?: RpcOptions): UnaryCall<GetCarsRequest, GetCarsResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetCarsRequest, GetCarsResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: LockCar(car.v1.LockCarRequest) returns (car.v1.LockCarResponse);
     */
    lockCar(input: LockCarRequest, options?: RpcOptions): UnaryCall<LockCarRequest, LockCarResponse> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<LockCarRequest, LockCarResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: UnlockCar(car.v1.UnlockCarRequest) returns (car.v1.UnlockCarResponse);
     */
    unlockCar(input: UnlockCarRequest, options?: RpcOptions): UnaryCall<UnlockCarRequest, UnlockCarResponse> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<UnlockCarRequest, UnlockCarResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: UpdateCar(car.v1.UpdateCarRequest) returns (car.v1.UpdateCarResponse);
     */
    updateCar(input: UpdateCarRequest, options?: RpcOptions): UnaryCall<UpdateCarRequest, UpdateCarResponse> {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept<UpdateCarRequest, UpdateCarResponse>("unary", this._transport, method, opt, input);
    }
}
